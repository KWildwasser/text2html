/* text2html
 * converts text into html files
 * "-" declares a list element
 * "'0-9'. " declares h1 
 * "'0-9'.'0-9' " declares h2 
 * 
 * author: Korbinian Wildwasser <korbinian.wildwasser@gmail.com>
 */
#include <iostream>
#include <fstream>
#include <string>
using namespace std;



void replaceAll(std::string& str, const std::string& from, const std::string& to) {
    if(from.empty())
        return;
    size_t start_pos = 0;
    while((start_pos = str.find(from, start_pos)) != std::string::npos) {
        str.replace(start_pos, from.length(), to);
        start_pos += to.length(); // In case 'to' contains 'from', like replacing 'x' with 'yx'
    }
}

int main (int argc, char* argv[]) {
  string line;
  /*status*/
  bool in_list = false;
  /*open files*/
  ifstream infile (argv[1]);
  ofstream outfile (argv[2]);
  if (infile.is_open() && outfile.is_open())
  {
	  /*write html head*/
	  outfile << "<!DOCTYPE html>" << '\n' 
		  << "<html lang=\"de\">" << '\n'
		  << "<head>" << '\n'
		  << "<meta charset=UTF-8>" << '\n' 
		  << "<title>" << argv[2] << "</title>" << '\n'
		  << "<!-- Korbinian Wildwasser -->" << '\n'
		  << "</head>" << '\n'
		  << "<body>" << '\n';
    /*process infile line by line*/
    while ( getline (infile,line) )
    {
	/*ignore empty lines*/
	if(line.length() == 0) {
		outfile << '\n';	
		continue;
	}
	/*replace ’<’, ’>’ and ’&’ to display correctly*/
	replaceAll(line, "&", "&amp;");
	replaceAll(line, "<", "&lt;");
	replaceAll(line, ">", "&gt;");
	/*trim leading blanks*/
	line = trim(line, whitespace);

	/*process list-elements started with a '-'*/
	if (line.at(0) ==  '-') {
		line.erase(0,1);
		if(!in_list) outfile << "<ul>" << '\n';
		in_list = true;
		outfile << "<li>" << line << "</li>" << '\n';
		continue;
	} else {
		if(in_list) {outfile << "</ul>" << '\n';}
		in_list = false;
		
	}
	/*process headings started with a digit*/
	if (isdigit(line.at(0))) {
		if(isdigit(line.at(2))) {
//			outfile << "<hr/>" << '\n'; 
			outfile << "<h2>" << line << "</h2>" << '\n';
		} else if (line.at(2) ==  ' ') {
			outfile << "<h1>" << line << "</h1>" << '\n';
		}
		continue;
	}
	/*default: process textlines as paragraph*/
	outfile << "<p>" << line << "</p>" << '\n';
    }
    /*close html and open lists*/
    if(in_list) {outfile << "</ul>" << '\n';}
    outfile <<  "</body>" << '\n' << "</html>";
    /*close files*/
    infile.close();
    outfile.close();
  }

  else cout << "Unable to open file" << '\n'; 

  return 0;
}

